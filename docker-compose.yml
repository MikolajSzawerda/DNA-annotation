version: "3.9"

services:
  ui:
    build: annotator_ui
    restart: always
    ports:
      - "3000:3000"
    command: yarn start

  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: annotator_db
    volumes:
      - ./docker/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kafka_network


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_network
  kafka-setup:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              kafka-topics --bootstrap-server kafka:9092 --list && \
              kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic annotation-request --replication-factor 1 --partitions 10 && \
              kafka-topics --bootstrap-server kafka:9092 --alter --topic annotation-request --partitions 10 && \
              kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic annotation-result --replication-factor 1 --partitions 1 && \
              echo -e 'Successfully created the following topics:' && \
              kafka-topics --bootstrap-server kafka:9092 --list'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - kafka_network
  core:
    build: annotator_core
    restart: always
    depends_on:
      - db
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MAIL_HOST=tets
      - MAIL_USERNAME=test
      - MAIL_PASSWORD=test
    ports:
      - "8080:8080"
    networks:
      - kafka_network
volumes:
  postgres-data:
networks:
  kafka_network:
    driver: bridge