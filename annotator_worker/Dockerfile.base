# Base image with R and essential tools
FROM r-base:latest
WORKDIR /app/annotator_worker

# Install system dependencies
RUN apt-get update && apt-get install -y \
      git \
      libssl-dev \
      curl \
      openjdk-17-jre \
      libffi-dev \
      libsqlite3-dev \
      gradle \
    && curl https://pyenv.run | bash \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for pyenv
ENV PYENV_ROOT /root/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

# Initialize pyenv and install Python 3.10
RUN echo 'eval "$(pyenv init --path)"' >> /etc/profile.d/pyenv.sh \
    && echo 'eval "$(pyenv init -)"' >> /etc/profile.d/pyenv.sh \
    && /root/.pyenv/bin/pyenv install 3.10.0 \
    && /root/.pyenv/bin/pyenv global 3.10.0

# Upgrade pip, install a specific version of setuptools and wheel
RUN pip install --upgrade pip \
    && pip install setuptools==57.5.0 \
    && pip install wheel

# Clone Pangolin repository
RUN git clone https://github.com/tkzeng/Pangolin.git

# Install Python dependencies
RUN pip install gffutils biopython pandas pyfastx \
    && pip install pyvcf \
    && pip install torch --index-url https://download.pytorch.org/whl/cpu

# Install Pangolin
RUN cd Pangolin && pip install .

# Copy R dependencies and install
COPY ./R-dependencies.txt R-dependencies.txt
RUN git clone https://github.com/raphaelleman/SPiP \
 && cd ./SPiP \
 && Rscript ../R-dependencies.txt

# Copy data
COPY ./data/ ./data/

# Create directories for input and output
RUN mkdir input && mkdir output